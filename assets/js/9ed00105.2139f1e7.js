"use strict";(self.webpackChunkspringwolf_docs=self.webpackChunkspringwolf_docs||[]).push([[4],{5162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),i=n(6010);const o="tabItem_Ymn6";function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(o,r),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),i=n(7294),o=n(6010),r=n(2389),l=n(7392),s=n(7094),p=n(2466);const c="tabList__CuJ",d="tabItem_LNqP";function u(e){var t;const{lazy:n,block:r,defaultValue:u,values:m,groupId:f,className:k}=e,g=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=m??g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),b=(0,l.l)(h,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===u?u:u??(null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)??g[0].props.value;if(null!==v&&!h.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:N}=(0,s.U)(),[y,A]=(0,i.useState)(v),C=[],{blockElementScrollPositionUntilNextRender:T}=(0,p.o5)();if(null!=f){const e=w[f];null!=e&&e!==y&&h.some((t=>t.value===e))&&A(e)}const S=e=>{const t=e.currentTarget,n=C.indexOf(t),a=h[n].value;a!==y&&(T(t),A(a),null!=f&&N(f,String(a)))},I=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=C.indexOf(e.currentTarget)+1;n=C[t]??C[0];break}case"ArrowLeft":{const t=C.indexOf(e.currentTarget)-1;n=C[t]??C[C.length-1];break}}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,o.Z)("tabs-container",c)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},k)},h.map((e=>{let{value:t,label:n,attributes:r}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>C.push(e),onKeyDown:I,onFocus:S,onClick:S},r,{className:(0,o.Z)("tabs__item",d,null==r?void 0:r.className,{"tabs__item--active":y===t})}),n??t)}))),n?(0,i.cloneElement)(g.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function m(e){const t=(0,r.Z)();return i.createElement(u,(0,a.Z)({key:String(t)},e))}},3087:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var a=n(7462),i=(n(7294),n(3905)),o=n(5488),r=n(5162),l=n(814);const s={sidebar_position:3},p="Configuration",c={unversionedId:"configuration",id:"configuration",title:"Configuration",description:"Activating",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/docs/configuration",draft:!1,editUrl:"https://github.com/springwolf/springwolf.github.io/edit/master/docs/configuration.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Quickstart",permalink:"/docs/quickstart"},next:{title:"Documenting Schemas",permalink:"/docs/documenting-schemas"}},d={},u=[{value:"Activating",id:"activating",level:2},{value:"Springwolf configuration",id:"springwolf-configuration",level:2},{value:"basePackage (required)",id:"basepackage-required",level:3},{value:"Info (required)",id:"info-required",level:3},{value:"Server",id:"server",level:3},{value:"Additional <code>application.properties</code>",id:"additional-applicationproperties",level:2}],m={toc:u};function f(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuration"},"Configuration"),(0,i.kt)("h2",{id:"activating"},"Activating"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You need to provide a configuration class annotated with:",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"@Configuration")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"@EnableAsyncApi")))),(0,i.kt)("li",{parentName:"ul"},"The name of the class does no matter. You don't have to, but it is a good idea to name the class related to Springwolf or AsyncApi.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@Configuration\n@EnableAsyncApi\npublic class AsyncApiConfiguration { }\n")),(0,i.kt)("h2",{id:"springwolf-configuration"},"Springwolf configuration"),(0,i.kt)("p",null,"There are 2 ways to configure springwolf:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"application.properties"),", which is simple and should suit most use-cases"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"AsyncApiDocket"),", which allows adding producers and consumers via code (and avoiding annotations)")),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"application.properties",label:"application.properties",default:!0,mdxType:"TabItem"},"Add the following to the spring application.properties file.",(0,i.kt)(l.Z,{language:"properties",mdxType:"CodeBlock"},"springwolf.docket.base-package=io.github.stavshamir.springwolf.example\n\nspringwolf.docket.info.title=${spring.application.name}\nspringwolf.docket.info.version=1.0.0\nspringwolf.docket.info.description=Springwolf example project to demonstrate springwolfs abilities\nspringwolf.docket.info.terms-of-service=http://asyncapi.org/terms\nspringwolf.docket.info.contact.name=springwolf\nspringwolf.docket.info.contact.email=example@example.com\nspringwolf.docket.info.contact.url=https://github.com/springwolf/springwolf-core\nspringwolf.docket.info.license.name=Apache License 2.0\n\nspringwolf.docket.servers.kafka.protocol=kafka\nspringwolf.docket.servers.kafka.url=${spring.kafka.bootstrap-servers}")),(0,i.kt)(r.Z,{value:"AsyncApiDocket",label:"AsyncApiDocket",mdxType:"TabItem"},"Add a AsyncApiDocket bean to the spring context, for example as part of the AsyncApiConfiguration.",(0,i.kt)(l.Z,{language:"java",mdxType:"CodeBlock"},'@Configuration\n@EnableAsyncApi\npublic class AsyncApiConfiguration {\n\n    private final String BOOTSTRAP_SERVERS;\n\n    public AsyncApiConfiguration(@Value("${kafka.bootstrap.servers}") String bootstrapServers) {\n        this.BOOTSTRAP_SERVERS = bootstrapServers;\n    }\n\n    @Bean\n    public AsyncApiDocket asyncApiDocket() {\n        Info info = Info.builder()\n                .title("Springwolf example project - Kafka")\n                .version("1.0.0")\n                .contact(Contact.builder()\n                        .name("springwolf")\n                        .url("https://github.com/springwolf/springwolf-core")\n                        .email("example@example.com")\n                        .build())\n                .description("Springwolf example project to demonstrate springwolfs abilities")\n                .license(License.builder()\n                        .name("Apache License 2.0")\n                        .build())\n                .build();\n\n        return AsyncApiDocket.builder()\n                .basePackage("io.github.stavshamir.springwolf.example.consumers")\n                .info(info)\n                .server("kafka", Server.builder()\n                        .protocol("kafka")\n                        .url(BOOTSTRAP_SERVERS)\n                        .build())\n                .build();\n    }\n}\n'))),(0,i.kt)("h3",{id:"basepackage-required"},"basePackage (required)"),(0,i.kt)("p",null,"It is recommended to structure the project such that all consumers and producers (classes containing listener/producer methods) are in the same package - it is not mandatory, and if they are scattered across multiple packages, just provide the highest in hierarchy package that contains all of them."),(0,i.kt)("p",null,"The base package will be scanned for classes containing ",(0,i.kt)("inlineCode",{parentName:"p"},"@Component")," annotated classes (that includes ",(0,i.kt)("inlineCode",{parentName:"p"},"@Service")," annotated classes) for methods annotated with ",(0,i.kt)("inlineCode",{parentName:"p"},"@KafkaListener"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@RabbitListener"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@AsyncListener"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@AsyncPublisher"),", etc."),(0,i.kt)("h3",{id:"info-required"},"Info (required)"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Info")," object provides metadata about the API (see ",(0,i.kt)("a",{parentName:"p",href:"https://www.asyncapi.com/docs/reference/specification/v2.0.0#infoObject."},"Info Object"),")."),(0,i.kt)("p",null,"All provided fields will be present in the generated document, but not all will be displayed in the UI."),(0,i.kt)("h3",{id:"server"},"Server"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Server")," object provides metadata the can help the reader understand the protocol, version, login details and more (see ",(0,i.kt)("a",{parentName:"p",href:"https://www.asyncapi.com/docs/reference/specification/v2.0.0#serversObject"},"Server Object"),")."),(0,i.kt)("p",null,"An AsyncAPI document can contain more than one server, but it is not common."),(0,i.kt)("p",null,"As with the ",(0,i.kt)("inlineCode",{parentName:"p"},"Info")," object, all provided fields will be present in the generated document, but not all will be displayed in the UI."),(0,i.kt)("h2",{id:"additional-applicationproperties"},"Additional ",(0,i.kt)("inlineCode",{parentName:"h2"},"application.properties")),(0,i.kt)("p",null,"The following table contains additional properties that can be specified in the ",(0,i.kt)("inlineCode",{parentName:"p"},"application.properties")," file:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"springwolf.enabled")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:null},"Allows to enable/disable springwolf at one central place.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"springwolf.paths.docs")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"/springwolf/docs")),(0,i.kt)("td",{parentName:"tr",align:null},"The path of the AsyncAPI document in JSON format. ",(0,i.kt)("em",{parentName:"td"},"Note that at the moment the UI will work only with the default value."))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"springwolf.plugin.amqp.publishing.enabled")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:null},"Allow (anyone) to produce amqp messages from the UI. ",(0,i.kt)("em",{parentName:"td"},"Note that this has security implications"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"springwolf.plugin.kafka.publishing.enabled")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:null},"Allow (anyone) to produce kafka messages from the UI. ",(0,i.kt)("em",{parentName:"td"},"Note that this has security implications"))))))}f.isMDXComponent=!0}}]);