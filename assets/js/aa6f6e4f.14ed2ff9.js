"use strict";(self.webpackChunkspringwolf_docs=self.webpackChunkspringwolf_docs||[]).push([[757],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>m});var n=t(7294);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,i=function(e,a){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=n.createContext({}),c=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},d=function(e){var a=c(e.components);return n.createElement(p.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},s=n.forwardRef((function(e,a){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=c(t),m=i,h=s["".concat(p,".").concat(m)]||s[m]||u[m]||o;return t?n.createElement(h,r(r({ref:a},d),{},{components:t})):n.createElement(h,r({ref:a},d))}));function m(e,a){var t=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=s;var l={};for(var p in a)hasOwnProperty.call(a,p)&&(l[p]=a[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var c=2;c<o;c++)r[c]=t[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}s.displayName="MDXCreateElement"},220:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=t(7462),i=(t(7294),t(3905));const o={sidebar_position:4},r="Documenting Producers",l={unversionedId:"documenting-producers",id:"documenting-producers",title:"Documenting Producers",description:"Unlike consumers which are defined declaratively with an annotation, producers are defined imperatively, and there is no implementation uniform enough so that metadata can be picked up automatically.",source:"@site/docs/documenting-producers.md",sourceDirName:".",slug:"/documenting-producers",permalink:"/docs/documenting-producers",draft:!1,editUrl:"https://github.com/springwolf/springwolf.github.io/edit/master/docs/documenting-producers.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/configuration"},next:{title:"Manually Documenting Consumers",permalink:"/docs/manually-documenting-consumers"}},p={},c=[{value:"<code>ProducerData</code>",id:"producerdata",level:2},{value:"Channel Name",id:"channel-name",level:3},{value:"Description",id:"description",level:3},{value:"Binding",id:"binding",level:3},{value:"Payload Type",id:"payload-type",level:3},{value:"<code>AmqpProducerData</code>",id:"amqpproducerdata",level:2},{value:"Queue Name (Channel Name)",id:"queue-name-channel-name",level:3},{value:"Description",id:"description-1",level:3},{value:"Exchange Name",id:"exchange-name",level:3},{value:"Routing Key",id:"routing-key",level:3},{value:"Payload Type",id:"payload-type-1",level:3},{value:"Example",id:"example",level:3},{value:"<code>KafkaProducerData</code>",id:"kafkaproducerdata",level:2},{value:"Topic Name (Channel Name)",id:"topic-name-channel-name",level:3},{value:"Description",id:"description-2",level:3},{value:"Payload Type",id:"payload-type-2",level:3},{value:"Example",id:"example-1",level:3}],d={toc:c};function u(e){let{components:a,...t}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"documenting-producers"},"Documenting Producers"),(0,i.kt)("p",null,"Unlike consumers which are defined declaratively with an annotation, producers are defined imperatively, and there is no implementation uniform enough so that metadata can be picked up automatically."),(0,i.kt)("p",null,"Because producers are also an important part of Async APIs, Springwolf provides a way to explicitly add them to the generated document, by declaring them in the ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncApiDocket")," using the ",(0,i.kt)("inlineCode",{parentName:"p"},"ProducerData")," object."),(0,i.kt)("h2",{id:"producerdata"},(0,i.kt)("inlineCode",{parentName:"h2"},"ProducerData")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Use specific ProducerData types ",(0,i.kt)("inlineCode",{parentName:"p"},"AmqpProducerData")," & ",(0,i.kt)("inlineCode",{parentName:"p"},"KafkaProducerData")," for protocol specific attributes")),(0,i.kt)("p",null,"Below is an example of describing a Kafka producer:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@Bean\npublic AsyncApiDocket asyncApiDocket() {\n\n    ProducerData exampleProducerData = ProducerData.builder()\n            .channelName("example-producer-topic")\n            .description("Optional. Customer uploaded an example payload")\n            .operationBinding(ImmutableMap.of("kafka", new KafkaOperationBinding()))\n            .payloadType(ExamplePayloadDto.class)\n            .build();\n  \n    return AsyncApiDocket.builder()\n            .basePackage(...)\n            .info(...)\n            .server(...)\n            .producer(exampleProducerData)\n            .build();\n}\n')),(0,i.kt)("p",null,"Multiple producers can be configured by calling the ",(0,i.kt)("inlineCode",{parentName:"p"},"producer()")," method multiple times."),(0,i.kt)("h3",{id:"channel-name"},"Channel Name"),(0,i.kt)("p",null,"The channel name (or topic name in case of Kafka) - this is the name that will be used to publish messages to by the UI."),(0,i.kt)("h3",{id:"description"},"Description"),(0,i.kt)("p",null,"Optional. The description allows for human-friendly text to verbosely explain the ",(0,i.kt)("em",{parentName:"p"},"message"),", like specific domain, what the topic is used for and which data it contains."),(0,i.kt)("h3",{id:"binding"},"Binding"),(0,i.kt)("p",null,"This property is used to discriminate the producer's protocol and provide protocol-specific properties (see ",(0,i.kt)("a",{parentName:"p",href:"https://www.asyncapi.com/docs/specifications/v2.0.0#operationBindingsObject"},"Operation Binding Object"),")."),(0,i.kt)("h3",{id:"payload-type"},"Payload Type"),(0,i.kt)("p",null,"The class object of the payload that will be published to this channel."),(0,i.kt)("h2",{id:"amqpproducerdata"},(0,i.kt)("inlineCode",{parentName:"h2"},"AmqpProducerData")),(0,i.kt)("p",null,"The above Kafka ",(0,i.kt)("inlineCode",{parentName:"p"},"ProducerData")," equivalent in ",(0,i.kt)("inlineCode",{parentName:"p"},"AmqpProducerData"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'    AmqpProducerData exampleProducer = AmqpProducerData.amqpProducerDataBuilder()\n        .queueName("example-producer-channel")\n        .description("example-producer-channel-description")\n        .exchangeName("example-topic-exchange")\n        .routingKey("example-topic-routing-key")\n        .payloadType(AnotherPayloadDto.class)\n        .build();\n')),(0,i.kt)("h3",{id:"queue-name-channel-name"},"Queue Name (Channel Name)"),(0,i.kt)("p",null,"The queue name that will be used to publish messages to by the UI."),(0,i.kt)("h3",{id:"description-1"},"Description"),(0,i.kt)("p",null,"Optional. The description allows for human-friendly text to verbosely explain the ",(0,i.kt)("em",{parentName:"p"},"message"),", like specific domain, what the topic is used for and which data it contains."),(0,i.kt)("h3",{id:"exchange-name"},"Exchange Name"),(0,i.kt)("p",null,"The exchange name that will be used to bind queues to."),(0,i.kt)("h3",{id:"routing-key"},"Routing Key"),(0,i.kt)("p",null,"The routing key used when publishing a message."),(0,i.kt)("h3",{id:"payload-type-1"},"Payload Type"),(0,i.kt)("p",null,"The class object of the payload that will be published to this channel."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("p",null,"See a full example ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/springwolf/springwolf-core/blob/master/springwolf-examples/springwolf-amqp-example/src/main/java/io/github/stavshamir/springwolf/example/configuration/AsyncApiConfiguration.java"},"here"),"."),(0,i.kt)("h2",{id:"kafkaproducerdata"},(0,i.kt)("inlineCode",{parentName:"h2"},"KafkaProducerData")),(0,i.kt)("p",null,"The above Kafka ",(0,i.kt)("inlineCode",{parentName:"p"},"ProducerData")," simplifies to the following ",(0,i.kt)("inlineCode",{parentName:"p"},"KafkaProducerData"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'    KafkaProducerData exampleProducerData = KafkaProducerData.kafkaProducerDataBuilder()\n        .topicName("example-producer-topic")\n        .description("Optional. Customer uploaded an example payload")\n        .payloadType(ExamplePayloadDto.class)\n        .build();\n')),(0,i.kt)("h3",{id:"topic-name-channel-name"},"Topic Name (Channel Name)"),(0,i.kt)("p",null,"The topic name that will be used to publish messages to by the UI."),(0,i.kt)("h3",{id:"description-2"},"Description"),(0,i.kt)("p",null,"Optional. The description allows for human-friendly text to verbosely explain the ",(0,i.kt)("em",{parentName:"p"},"message"),", like specific domain, what the topic is used for and which data it contains."),(0,i.kt)("h3",{id:"payload-type-2"},"Payload Type"),(0,i.kt)("p",null,"The class object of the payload that will be published to this channel."),(0,i.kt)("h3",{id:"example-1"},"Example"),(0,i.kt)("p",null,"See a full example ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/springwolf/springwolf-core/blob/master/springwolf-examples/springwolf-kafka-example/src/main/java/io/github/stavshamir/springwolf/example/configuration/AsyncApiConfiguration.java"},"here"),"."))}u.isMDXComponent=!0}}]);