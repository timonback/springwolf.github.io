"use strict";(self.webpackChunkspringwolf_docs=self.webpackChunkspringwolf_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Introduction","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Supported Protocols","href":"/docs/introduction/supported-protocols","docId":"introduction/supported-protocols"}],"href":"/docs/introduction/"},{"type":"link","label":"Quickstart","href":"/docs/quickstart","docId":"quickstart"},{"type":"category","label":"Configuration","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Consumers","href":"/docs/configuration/documenting-consumers","docId":"configuration/documenting-consumers"},{"type":"link","label":"Producers","href":"/docs/configuration/documenting-producers","docId":"configuration/documenting-producers"},{"type":"link","label":"Schemas","href":"/docs/configuration/documenting-schemas","docId":"configuration/documenting-schemas"}],"href":"/docs/configuration/"},{"type":"link","label":"Behind the scenes","href":"/docs/behind-the-scenes","docId":"behind-the-scenes"},{"type":"link","label":"Frequently Asked Questions","href":"/docs/faq","docId":"faq"}]},"docs":{"behind-the-scenes":{"id":"behind-the-scenes","title":"Behind the scenes","description":"The following paragraphs describe how springwolf works internally.","sidebar":"tutorialSidebar"},"configuration/configuration":{"id":"configuration/configuration","title":"Configuration","description":"There are 2 ways to configure springwolf:","sidebar":"tutorialSidebar"},"configuration/documenting-consumers":{"id":"configuration/documenting-consumers","title":"Consumers","description":"Springwolf comes with build-in support to auto-detect listeners of supported protocols.","sidebar":"tutorialSidebar"},"configuration/documenting-producers":{"id":"configuration/documenting-producers","title":"Producers","description":"Unlike consumers which are defined declaratively with an annotation, producers are defined imperatively, and there is no implementation uniform enough so that metadata can be picked up automatically.","sidebar":"tutorialSidebar"},"configuration/documenting-schemas":{"id":"configuration/documenting-schemas","title":"Schemas","description":"Under the hood springwolf relies on swagger-core ModelConverters.","sidebar":"tutorialSidebar"},"faq":{"id":"faq","title":"Frequently Asked Questions","description":"General","sidebar":"tutorialSidebar"},"introduction/introduction":{"id":"introduction/introduction","title":"Introduction","description":"What is springwolf","sidebar":"tutorialSidebar"},"introduction/supported-protocols":{"id":"introduction/supported-protocols","title":"Supported Protocols","description":"| Protocol        | Annotation                        | Example Project                         | Latest Plugin Version |","sidebar":"tutorialSidebar"},"quickstart":{"id":"quickstart","title":"Quickstart","description":"The following instructions are for Kafka services - but amqp services configuration is almost identical. Check out the example project for complete examples.","sidebar":"tutorialSidebar"}}}')}}]);